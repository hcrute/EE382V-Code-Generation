
******  DataFlow Result for function small  ******
{ s }
entry:
  %s.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  %0 = load i32, i32* %s.addr, align 4
  %add = add nsw i32 100, %0
  store i32 %add, i32* %a, align 4
  %1 = load i32, i32* %s.addr, align 4
  %mul = mul nsw i32 25, %1
  store i32 %mul, i32* %b, align 4
  store i32 1, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @A, i64 0, i64 0), align 16
  %2 = load i32, i32* %a, align 4
  %3 = load i32, i32* %b, align 4
  %cmp = icmp sgt i32 %2, %3
  br i1 %cmp, label %if.then, label %if.else
{ a b }
---
{ a b }
if.then:                                          ; preds = %entry
  %4 = load i32, i32* %b, align 4
  %call = call i32 @extra(i32 %4)
  store i32 %call, i32* %b, align 4
  br label %if.end6
{ a b }
---
{ a b }
if.else:                                          ; preds = %entry
  %5 = load i32, i32* %a, align 4
  %6 = load i32, i32* %b, align 4
  %cmp1 = icmp slt i32 %5, %6
  br i1 %cmp1, label %if.then2, label %if.else4
{ a b }
---
{ a b }
if.then2:                                         ; preds = %if.else
  %7 = load i32, i32* %a, align 4
  %call3 = call i32 @extra(i32 %7)
  store i32 %call3, i32* %b, align 4
  br label %if.end
{ a b }
---
{ a b }
if.else4:                                         ; preds = %if.else
  %call5 = call i32 @extra(i32 0)
  store i32 %call5, i32* %b, align 4
  br label %if.end
{ a b }
---
{ a b }
if.end:                                           ; preds = %if.else4, %if.then2
  br label %if.end6
{ a b }
---
{ a b }
if.end6:                                          ; preds = %if.end, %if.then
  %8 = load i32, i32* %a, align 4
  %9 = load i32, i32* %b, align 4
  %cmp7 = icmp sgt i32 %8, %9
  br i1 %cmp7, label %if.then8, label %if.else17
{ a b }
---
{ a b }
if.then8:                                         ; preds = %if.end6
  %10 = load i32, i32* %a, align 4
  %11 = load i32, i32* %b, align 4
  %add9 = add nsw i32 %11, 10
  %cmp10 = icmp sgt i32 %10, %add9
  br i1 %cmp10, label %if.then11, label %if.else13
{ b }
---
{ b }
if.then11:                                        ; preds = %if.then8
  %12 = load i32, i32* %b, align 4
  %call12 = call i32 @extra(i32 %12)
  store i32 %call12, i32* %b, align 4
  br label %if.end16
{ b }
---
{ b }
if.else13:                                        ; preds = %if.then8
  %13 = load i32, i32* %b, align 4
  %add14 = add nsw i32 %13, 10
  %call15 = call i32 @extra(i32 %add14)
  store i32 %call15, i32* %b, align 4
  br label %if.end16
{ b }
---
{ b }
if.end16:                                         ; preds = %if.else13, %if.then11
  br label %if.end24
{ b }
---
{ a b }
if.else17:                                        ; preds = %if.end6
  %14 = load i32, i32* %a, align 4
  %15 = load i32, i32* %b, align 4
  %cmp18 = icmp slt i32 %14, %15
  br i1 %cmp18, label %if.then19, label %if.else21
{ a b }
---
{ a b }
if.then19:                                        ; preds = %if.else17
  %16 = load i32, i32* %a, align 4
  %call20 = call i32 @extra(i32 %16)
  store i32 %call20, i32* %b, align 4
  br label %if.end23
{ b }
---
{ b }
if.else21:                                        ; preds = %if.else17
  %call22 = call i32 @extra(i32 0)
  store i32 %call22, i32* %b, align 4
  br label %if.end23
{ b }
---
{ b }
if.end23:                                         ; preds = %if.else21, %if.then19
  br label %if.end24
{ b }
---
{ b }
if.end24:                                         ; preds = %if.end23, %if.end16
  %17 = load i32, i32* %b, align 4
  ret i32 %17
{ }
---

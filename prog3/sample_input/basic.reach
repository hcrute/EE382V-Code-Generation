
******  DataFlow Result for function sum  ******
{ b a }
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %res = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  store i32 1, i32* %res, align 4
  %0 = load i32, i32* %a.addr, align 4
  store i32 %0, i32* %i, align 4
  br label %for.cond
{ b a b.addr a.addr i res  }
---
{ b a b.addr a.addr i res    cmp   mul  inc }
for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %b.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end
{ b a b.addr a.addr i res    cmp   mul  inc }
---
{ b a b.addr a.addr i res    cmp   mul  inc }
for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %res, align 4
  %mul = mul nsw i32 %4, %3
  store i32 %mul, i32* %res, align 4
  br label %for.inc
{ b a b.addr a.addr i res    cmp   mul  inc }
---
{ b a b.addr a.addr i res    cmp   mul  inc }
for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond
{ b a b.addr a.addr i res    cmp   mul  inc }
---
{ b a b.addr a.addr i res    cmp   mul  inc }
for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %res, align 4
  ret i32 %6
{ b a b.addr a.addr i res     cmp   mul  inc }
---

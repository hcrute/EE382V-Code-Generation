
******  DataFlow Result for function small  ******
{ s }
entry:
  %s.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  %0 = load i32, i32* %s.addr, align 4
  %add = add nsw i32 100, %0
  store i32 %add, i32* %a, align 4
  %1 = load i32, i32* %s.addr, align 4
  %mul = mul nsw i32 25, %1
  store i32 %mul, i32* %b, align 4
  %2 = load i32, i32* %a, align 4
  %3 = load i32, i32* %b, align 4
  %cmp = icmp sgt i32 %2, %3
  br i1 %cmp, label %if.then, label %if.else6
{ s.addr s   a b  add  mul cmp }
---
{ s.addr s   a b  add  mul cmp }
if.then:                                          ; preds = %entry
  %4 = load i32, i32* %a, align 4
  %5 = load i32, i32* %b, align 4
  %add1 = add nsw i32 %5, 10
  %cmp2 = icmp sgt i32 %4, %add1
  br i1 %cmp2, label %if.then3, label %if.else
{ s.addr s   a b  add  mul cmp   add1 cmp2 }
---
{ s.addr s   a b  add  mul cmp   add1 cmp2 }
if.then3:                                         ; preds = %if.then
  %6 = load i32, i32* %b, align 4
  %call = call i32 @extra(i32 %6)
  store i32 %call, i32* %b, align 4
  br label %if.end
{ s.addr s   a b  add  mul cmp   add1 cmp2  call }
---
{ s.addr s   a b  add  mul cmp   add1 cmp2 }
if.else:                                          ; preds = %if.then
  %7 = load i32, i32* %b, align 4
  %add4 = add nsw i32 %7, 10
  %call5 = call i32 @extra(i32 %add4)
  store i32 %call5, i32* %b, align 4
  br label %if.end
{ s.addr s   a b  add  mul cmp   add1 cmp2  add4 call5 }
---
{ s.addr s   a b  add  mul cmp   add1 cmp2  call  add4 call5 }
if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end13
{ s.addr s   a b  add  mul cmp   add1 cmp2  call  add4 call5 }
---
{ s.addr s   a b  add  mul cmp }
if.else6:                                         ; preds = %entry
  %8 = load i32, i32* %a, align 4
  %9 = load i32, i32* %b, align 4
  %cmp7 = icmp slt i32 %8, %9
  br i1 %cmp7, label %if.then8, label %if.else10
{ s.addr s   a b  add  mul cmp   cmp7 }
---
{ s.addr s   a b  add  mul cmp   cmp7 }
if.then8:                                         ; preds = %if.else6
  %10 = load i32, i32* %a, align 4
  %call9 = call i32 @extra(i32 %10)
  store i32 %call9, i32* %b, align 4
  br label %if.end12
{ s.addr s   a b  add  mul call9 cmp   cmp7  }
---
{ s.addr s   a b  add  mul cmp   cmp7 }
if.else10:                                        ; preds = %if.else6
  %call11 = call i32 @extra(i32 0)
  store i32 %call11, i32* %b, align 4
  br label %if.end12
{ s.addr s   a b  add  mul call11 cmp   cmp7 }
---
{ s.addr s   a b  add  mul call9 call11 cmp   cmp7  }
if.end12:                                         ; preds = %if.else10, %if.then8
  br label %if.end13
{ s.addr s   a b  add  mul call9 call11 cmp   cmp7  }
---
{ s.addr s   a b  add  mul call9 call11 cmp   add1 cmp2  call  add4 call5   cmp7  }
if.end13:                                         ; preds = %if.end12, %if.end
  %11 = load i32, i32* %b, align 4
  ret i32 %11
{ s.addr s   a b  add  mul call9 call11 cmp   add1 cmp2  call  add4 call5   cmp7   }
---

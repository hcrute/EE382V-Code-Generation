
******  DataFlow Result for function small  ******
{ s }
entry:
  %s.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %call1 = alloca i32, align 4
  %call2 = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load i32, i32* %s.addr, align 4
  %call = call i32 @extra(i32 %0)
  store i32 %call, i32* %call1, align 4
  %1 = load i32, i32* %call1, align 4
  store i32 %1, i32* %i, align 4
  %2 = load i32, i32* %s.addr, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end
{ call1 s.addr i call2 }
---
{ call1 s.addr i call2 }
if.then:                                          ; preds = %entry
  %3 = load i32, i32* %s.addr, align 4
  %call3 = call i32 @extra(i32 %3)
  %call4 = call i32 @extra(i32 %call3)
  store i32 %call4, i32* %call2, align 4
  %4 = load i32, i32* %call2, align 4
  store i32 %4, i32* %i, align 4
  br label %if.end
{ call1 i }
---
{ call1 i }
if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %call1, align 4
  %add = add nsw i32 %5, %6
  ret i32 %add
{ }
---


******  DataFlow Result for function br  ******
{ s1 s2 s }
entry:
  %s.addr = alloca i32, align 4
  %s1.addr = alloca i32, align 4
  %s2.addr = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  store i32 %s1, i32* %s1.addr, align 4
  store i32 %s2, i32* %s2.addr, align 4
  %0 = load i32, i32* %s.addr, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else
{ s.addr s1.addr }
---
{ s.addr }
if.then:                                          ; preds = %entry
  %1 = load i32, i32* %s.addr, align 4
  %call = call i32 (i32, ...) @f(i32 %1)
  br label %if.end6
{ s.addr }
---
{ s.addr s1.addr }
if.else:                                          ; preds = %entry
  %2 = load i32, i32* %s.addr, align 4
  %cmp1 = icmp slt i32 %2, 0
  br i1 %cmp1, label %if.then2, label %if.else4
{ s.addr s1.addr }
---
{ s.addr s1.addr }
if.then2:                                         ; preds = %if.else
  %3 = load i32, i32* %s.addr, align 4
  %sub = sub nsw i32 0, %3
  %4 = load i32, i32* %s1.addr, align 4
  %call3 = call i32 (i32, ...) @f(i32 %sub, i32 %4)
  br label %if.end
{ s.addr }
---
{ s.addr }
if.else4:                                         ; preds = %if.else
  %call5 = call i32 (i32, ...) @f(i32 0)
  br label %if.end
{ s.addr }
---
{ s.addr }
if.end:                                           ; preds = %if.else4, %if.then2
  br label %if.end6
{ s.addr }
---
{ s.addr }
if.end6:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* %s.addr, align 4
  ret i32 %5
{ }
---

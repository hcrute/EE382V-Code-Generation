
******  DataFlow Result for function f  ******
{ s }
entry:
  %s.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %y = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %while.cond
{ i s.addr j y }
---
{ i s.addr j y }
while.cond:                                       ; preds = %while.end, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %s.addr, align 4
  %add = add nsw i32 %1, 10
  %cmp = icmp slt i32 %0, %add
  br i1 %cmp, label %while.body, label %while.end6
{ i s.addr j y }
---
{ i s.addr j y }
while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %call = call i32 @extra(i32 %2)
  store i32 %call, i32* %y, align 4
  br label %while.cond1
{ i s.addr j y }
---
{ i s.addr j y }
while.cond1:                                      ; preds = %while.body3, %while.body
  %3 = load i32, i32* %j, align 4
  %4 = load i32, i32* %s.addr, align 4
  %cmp2 = icmp slt i32 %3, %4
  br i1 %cmp2, label %while.body3, label %while.end
{ i s.addr j y }
---
{ i s.addr j y }
while.body3:                                      ; preds = %while.cond1
  %5 = load i32, i32* %y, align 4
  %6 = load i32, i32* %j, align 4
  %call4 = call i32 @extra2(i32 %5, i32 %6)
  store i32 %call4, i32* %j, align 4
  br label %while.cond1
{ i s.addr j y }
---
{ i s.addr j y }
while.end:                                        ; preds = %while.cond1
  %7 = load i32, i32* %j, align 4
  %call5 = call i32 @extra(i32 %7)
  store i32 %call5, i32* %i, align 4
  br label %while.cond
{ i s.addr j y }
---
{ i }
while.end6:                                       ; preds = %while.cond
  %8 = load i32, i32* %i, align 4
  ret i32 %8
{ }
---

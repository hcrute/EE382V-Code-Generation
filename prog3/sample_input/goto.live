
******  DataFlow Result for function go2  ******
{ id }
entry:
  %id.addr = alloca i32, align 4
  %p = alloca %struct.user*, align 8
  store i32 %id, i32* %id.addr, align 4
  store %struct.user* @u, %struct.user** %p, align 8
  br label %while.cond
{ id.addr p }
---
{ id.addr p }
while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.user*, %struct.user** %p, align 8
  %tobool = icmp ne %struct.user* %0, null
  br i1 %tobool, label %while.body, label %while.end
{ id.addr p }
---
{ id.addr p }
while.body:                                       ; preds = %while.cond
  %1 = load %struct.user*, %struct.user** %p, align 8
  %id1 = getelementptr inbounds %struct.user, %struct.user* %1, i32 0, i32 0
  %2 = load i32, i32* %id1, align 8
  %3 = load i32, i32* %id.addr, align 4
  %cmp = icmp eq i32 %2, %3
  br i1 %cmp, label %if.then, label %if.else
{ id.addr p }
---
{ p }
if.then:                                          ; preds = %while.body
  br label %end
{ p }
---
{ id.addr p }
if.else:                                          ; preds = %while.body
  %4 = load %struct.user*, %struct.user** %p, align 8
  %next = getelementptr inbounds %struct.user, %struct.user* %4, i32 0, i32 1
  %5 = load %struct.user*, %struct.user** %next, align 8
  store %struct.user* %5, %struct.user** %p, align 8
  br label %if.end
{ id.addr p }
---
{ id.addr p }
if.end:                                           ; preds = %if.else
  br label %while.cond
{ id.addr p }
---
{ id.addr p }
while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %id.addr, align 4
  store i32 %6, i32* getelementptr inbounds (%struct.user, %struct.user* @u, i32 0, i32 0), align 8
  br label %end
{ p }
---
{ p }
end:                                              ; preds = %while.end, %if.then
  %7 = load %struct.user*, %struct.user** %p, align 8
  store %struct.user* %7, %struct.user** @lu, align 8
  %8 = load %struct.user*, %struct.user** %p, align 8
  ret %struct.user* %8
{ }
---


******  DataFlow Result for function f  ******
{ s1 s }
entry:
  %s.addr = alloca i32, align 4
  %s1.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  store i32 %s1, i32* %s1.addr, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond
{ s.addr s1.addr i }
---
{ s.addr s1.addr i }
for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %s.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end
{ s.addr s1.addr i }
---
{ s.addr s1.addr i }
for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %rem = srem i32 %2, 2
  %cmp1 = icmp eq i32 %rem, 0
  br i1 %cmp1, label %if.then, label %if.end
{ s.addr s1.addr i }
---
{ s.addr s1.addr i }
if.then:                                          ; preds = %for.body
  br label %for.inc
{ s.addr s1.addr i }
---
{ s.addr s1.addr i }
if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %call = call i32 @extra(i32 %3)
  store i32 %call, i32* %s1.addr, align 4
  %4 = load i32, i32* %s1.addr, align 4
  %cmp2 = icmp sgt i32 %4, 0
  br i1 %cmp2, label %if.then3, label %if.end4
{ s.addr s1.addr i }
---
{ i }
if.then3:                                         ; preds = %if.end
  br label %for.end
{ i }
---
{ s.addr s1.addr i }
if.end4:                                          ; preds = %if.end
  br label %for.inc
{ s.addr s1.addr i }
---
{ s.addr s1.addr i }
for.inc:                                          ; preds = %if.end4, %if.then
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond
{ s.addr s1.addr i }
---
{ i }
for.end:                                          ; preds = %if.then3, %for.cond
  %6 = load i32, i32* %i, align 4
  ret i32 %6
{ }
---

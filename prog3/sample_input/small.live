
******  DataFlow Result for function small  ******
{ s }
entry:
  %s.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  %0 = load i32, i32* %s.addr, align 4
  store i32 %0, i32* %x, align 4
  %1 = load i32, i32* %s.addr, align 4
  store i32 %1, i32* %y, align 4
  %2 = load i32, i32* %s.addr, align 4
  store i32 %2, i32* %a, align 4
  %3 = load i32, i32* %s.addr, align 4
  store i32 %3, i32* %b, align 4
  %4 = load i32, i32* %s.addr, align 4
  store i32 %4, i32* %c, align 4
  %5 = load i32, i32* %s.addr, align 4
  store i32 %5, i32* %d, align 4
  %6 = load i32, i32* %c, align 4
  %7 = load i32, i32* %d, align 4
  %mul = mul nsw i32 %6, %7
  store i32 %mul, i32* %x, align 4
  %8 = load i32, i32* %x, align 4
  %div = sdiv i32 %8, 2
  store i32 %div, i32* %y, align 4
  %9 = load i32, i32* %s.addr, align 4
  %cmp = icmp sgt i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end
{ y a x b }
---
{ y a x b }
if.then:                                          ; preds = %entry
  %10 = load i32, i32* %x, align 4
  %11 = load i32, i32* %y, align 4
  %add = add nsw i32 %10, %11
  store i32 %add, i32* %a, align 4
  %12 = load i32, i32* %a, align 4
  %13 = load i32, i32* %b, align 4
  %add1 = add nsw i32 %12, %13
  store i32 %add1, i32* %x, align 4
  br label %if.end
{ x }
---
{ x }
if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %x, align 4
  ret i32 %14
{ }
---
